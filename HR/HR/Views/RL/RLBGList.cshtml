
@{
    Layout = null;
}


<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <link rel="stylesheet"
          href="../../css/table.css" type="text/css">


    <script src="~/Scripts/vue/dist/vue.js"></script>
    <script src="~/Scripts/element-ui/lib/index.js"></script>
    <link href="~/Scripts/element-ui/lib/theme-chalk/index.css" rel="stylesheet" />
    <script src="~/Scripts/axios/dist/axios.js"></script>
    <style type="text/css">
        .el-table tr {
            background-color: #FFFFCC;
        }
    </style>
</head>

<body>
    <div id="app">
        <form action="" method="post">
            <table width="100%">
                <tr>
                    <td>
                        <font color="black">
                            您正在做的业务是：人力资源--人力资源档案管理--人力资源档案查询
                        </font>
                    </td>
                </tr>
                <tr>
                    <td>
                        符合条件的人力资源档案总数：{{totals}}例
                    </td>
                </tr>
            </table>

            <el-table :data="datable"
                      style="width: 100%"
                      :header-cell-style="{color: '#C8D6F1', fontSize: '18px', height:'64px',  background: '#FFFFCC'}">
                <el-table-column fixed
                                 prop="huf_id"
                                 label="档案编号"
                                 width="150">
                    <template slot-scope="scope">
                        <a :href="'RLBGListCXid?id=' + scope.row.huf_id">{{ scope.row.huf_id }}</a>
                    </template>
                </el-table-column>
                <el-table-column fixed
                                 prop="human_name"
                                 label="姓名">
                </el-table-column>
                <el-table-column fixed
                                 prop="human_sex"
                                 label="性别">
                </el-table-column>
                <el-table-column fixed
                                 prop="first_kind_name"
                                 label="I级机构">
                </el-table-column>
                <el-table-column fixed
                                 prop="second_kind_name"
                                 label="II级机构">
                </el-table-column>
                <el-table-column fixed
                                 prop="third_kind_name"
                                 label="III级机构">
                </el-table-column>
                <el-table-column fixed
                                 prop="human_major_kind_name"
                                 label="职位分类">
                </el-table-column>
                <el-table-column fixed
                                 prop="hunma_major_name"
                                 label="职位名称">
                </el-table-column>
            </el-table>
            <el-button v-on:click="goToFirstPage">首页</el-button>
            <el-button v-on:click="goToPrevPage">上一页</el-button>
            <el-button v-on:click="goToNextPage">下一页</el-button>
            <el-button v-on:click="goToLastPage">尾页</el-button>
            <el-input v-model="jumpPage" type="number" placeholder="跳转页码" style="width: 10%;"></el-input>
            <el-button v-on:click="jumpToPage">跳转</el-button>
        </form>
    </div>
    <script type="text/javascript">
        var vm = new Vue({
            el: "#app",
            data() {
                return {
                    datable: [],
                    currentPage: 1,
                    pageSize: 2,
                    total: 0,
                    totals: 0,
                    jumpPage: "",
                }
            },
            methods: {
                handleEdit(row) {
                    axios.get("/ZhaoP/JLCXiuu?id=" + row.res_id)
                        .then(res => {
                            if (res.data == "1") {
                                location.href = 'JLC';
                            } else {

                            }
                        })
                        .catch(err => {
                            console.log(err);
                        })
                },
                fill() {
                    var queryString = window.location.search;

                    // 解析查询字符串，获取参数值
                    var params = new URLSearchParams(queryString);
                    var fl = params.get('fl');
                    var mc = params.get('mc');
                    var yi = params.get('yi');
                    var er = params.get('er');
                    var sa = params.get('sa');
                    var qsj = params.get('qsj');
                    var zsj = params.get('zsj');


                    axios.get("/RL/RLCXListCX", {
                        params: {
                            yi: yi,
                            er: er,
                            sa: sa,
                            fl: fl,
                            mc: mc,
                            qsj: qsj,
                            zsj: zsj,
                            pageSize: this.pageSize,
                            currentPage: this.currentPage,
                        }
                    })
                        .then(res => {
                            this.datable = res.data.List;
                            this.total = res.data.Rows;
                            this.totals = res.data.Rowst;
                        })
                        .catch(err => {
                            console.log(err);
                        })
                },
                goToFirstPage() {//首页
                    this.currentPage = 1;
                    this.fill();

                },
                goToPrevPage() {//上一页
                    if (this.currentPage > 1) {
                        this.currentPage--;
                    } else {
                        this.currentPage = 1;
                    }
                    this.fill();
                },
                goToNextPage() {//下一页
                    //console.log("进入了：");
                    if (this.currentPage == this.total) {

                        this.currentPage == this.total;
                    }
                    else {
                        this.currentPage++;
                    }
                    this.fill();
                },
                goToLastPage() {//尾页
                    this.currentPage = this.total;
                    this.fill();


                },
                jumpToPage() {//跳转
                    const page = parseInt(this.jumpPage);
                    if (page > this.total) {
                        this.goToLastPage();
                        this.jumpPage = '';
                    } else if (page < 1) {
                        this.goToFirstPage();
                        this.jumpPage = '';
                    } else {
                        this.currentPage = page;
                        this.fill();
                        this.jumpPage = '';
                    }
                },
            },
            mounted: function () {
                this.fill();

            }
        })
    </script>
</body>
</html>

